{
  "_args": [
    [
      {
        "raw": "@ngrx/store@github:ngrx/store",
        "scope": "@ngrx",
        "escapedName": "@ngrx%2fstore",
        "name": "@ngrx/store",
        "rawSpec": "github:ngrx/store",
        "spec": "github:ngrx/store",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:ngrx/store.git",
          "sshUrl": "git+ssh://git@github.com/ngrx/store.git",
          "httpsUrl": "git+https://github.com/ngrx/store.git",
          "gitUrl": "git://github.com/ngrx/store.git",
          "shortcut": "github:ngrx/store",
          "directUrl": "https://raw.githubusercontent.com/ngrx/store/master/package.json"
        }
      },
      "D:\\dev\\Radwin\\WebULC"
    ]
  ],
  "_from": "ngrx/store",
  "_id": "@ngrx/store@2.2.1",
  "_inCache": true,
  "_installable": true,
  "_location": "/@ngrx/store",
  "_phantomChildren": {},
  "_requested": {
    "raw": "@ngrx/store@github:ngrx/store",
    "scope": "@ngrx",
    "escapedName": "@ngrx%2fstore",
    "name": "@ngrx/store",
    "rawSpec": "github:ngrx/store",
    "spec": "github:ngrx/store",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:ngrx/store.git",
      "sshUrl": "git+ssh://git@github.com/ngrx/store.git",
      "httpsUrl": "git+https://github.com/ngrx/store.git",
      "gitUrl": "git://github.com/ngrx/store.git",
      "shortcut": "github:ngrx/store",
      "directUrl": "https://raw.githubusercontent.com/ngrx/store/master/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git://github.com/ngrx/store.git#da6b6cb6270fc34034cae07e9de7272ab3a0e483",
  "_shasum": "5d2aeb2d90805b78c1e7c9730850583c03368416",
  "_shrinkwrap": null,
  "_spec": "@ngrx/store@github:ngrx/store",
  "_where": "D:\\dev\\Radwin\\WebULC",
  "author": {
    "name": "Rob Wormald",
    "email": "robwormald@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/ngrx/store/issues"
  },
  "dependencies": {},
  "description": "RxJS powered Redux for Angular2 apps",
  "devDependencies": {
    "@angular/common": "^2.0.0",
    "@angular/compiler": "^2.0.0",
    "@angular/compiler-cli": "^0.6.0",
    "@angular/core": "^2.0.0",
    "@angular/platform-browser": "^2.0.0",
    "@angular/platform-browser-dynamic": "^2.0.0",
    "@angular/platform-server": "^2.0.0",
    "@ngrx/core": "^1.2.0",
    "@types/jasmine": "^2.2.33",
    "@types/node": "^6.0.38",
    "awesome-typescript-loader": "^2.2.1",
    "core-js": "^2.4.1",
    "cpy-cli": "^1.0.1",
    "istanbul-instrumenter-loader": "^0.2.0",
    "jasmine": "^2.5.0",
    "karma": "^1.2.0",
    "karma-chrome-launcher": "^2.0.0",
    "karma-coverage": "^1.1.1",
    "karma-jasmine": "^1.0.2",
    "karma-mocha-reporter": "^2.1.0",
    "karma-sourcemap-loader": "^0.3.7",
    "karma-webpack": "^1.8.0",
    "rimraf": "^2.5.4",
    "rollup": "^0.34.13",
    "rxjs": "^5.0.0-beta.11",
    "ts-loader": "^0.8.2",
    "tslint": "^3.15.1",
    "tslint-loader": "^2.1.5",
    "typescript": "^2.0.2",
    "uglifyjs": "^2.4.10",
    "webpack": "^2.1.0-beta.21",
    "zone.js": "^0.6.17"
  },
  "gitHead": "da6b6cb6270fc34034cae07e9de7272ab3a0e483",
  "homepage": "https://github.com/ngrx/store#readme",
  "keywords": [
    "RxJS",
    "Angular2",
    "Redux"
  ],
  "license": "MIT",
  "main": "./bundles/store.umd.js",
  "module": "./index.js",
  "name": "@ngrx/store",
  "optionalDependencies": {},
  "peerDependencies": {
    "@angular/core": "^2.0.0",
    "rxjs": "^5.0.0-beta.12",
    "@ngrx/core": "^1.1.0"
  },
  "readme": "# @ngrx/store\r\nRxJS powered state management for Angular applications, inspired by Redux\r\n\r\n[![Join the chat at https://gitter.im/ngrx/store](https://badges.gitter.im/ngrx/store.svg)](https://gitter.im/ngrx/store?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n[![CircleCI Status for ngrx/store](https://circleci.com/gh/ngrx/store.svg?style=shield&circle-token=aea1fc73de3419cd926fc95e627e036113646fd8\r\n)](https://circleci.com/gh/ngrx/store)\r\n[![npm version](https://badge.fury.io/js/%40ngrx%2Fstore.svg)](https://badge.fury.io/js/%40ngrx%2Fstore)\r\n\r\n@ngrx/store is a controlled state container designed to help write performant, consistent applications\r\non top of Angular. Core tenets:\r\n- State is a single immutable data structure\r\n- Actions describe state changes\r\n- Pure functions called reducers take the previous state and the next action to compute the new state\r\n- State accessed with the `Store`, an observable of state and an observer of actions\r\n\r\nThese core principles enable building components that can use the `OnPush` change detection strategy\r\ngiving you [intelligent, performant change detection](http://blog.thoughtram.io/angular/2016/02/22/angular-2-change-detection-explained.html#smarter-change-detection)\r\nthroughout your application.\r\n\r\n\r\n### Installation\r\nInstall @ngrx/core and @ngrx/store from npm:\r\n```bash\r\nnpm install @ngrx/core @ngrx/store --save\r\n```\r\n\r\nOptional packages:\r\n- [@ngrx/store-devtools](https://github.com/ngrx/store-devtools) instruments your store letting you use a\r\n[powerful time-travelling debugger](https://chrome.google.com/webstore/detail/redux-devtools/lmhkpmbekcpmknklioeibfkpmmfibljd?hl=en).\r\n- [@ngrx/router-store](https://github.com/ngrx/router-store) keeps the state of @angular/router in your store\r\n- [@ngrx/effects](https://github.com/ngrx/effects) isolates side effects from your UI by expressing side effects as sources of actions\r\n\r\n\r\n### Examples\r\n- [Official @ngrx/example-app](https://github.com/ngrx/example-app) is an officially maintained example application showcasing best practices\r\nfor @ngrx projects, including @ngrx/store and @ngrx/effects\r\n- [angular-webpack2-starter](https://github.com/qdouble/angular-webpack2-starter) is a complete Webpack 2 starter with built-in support for @ngrx.\r\nIncludes Ahead-of-Time (AOT) compilation, hot module reloading (HMR), devtools, and server-side rendering.\r\n\r\n\r\n### Introduction\r\n- [Reactive Angular 2 with ngrx (video)](https://youtu.be/mhA7zZ23Odw)\r\n- [Comprehensive Introduction to @ngrx/store](https://gist.github.com/btroncone/a6e4347326749f938510)\r\n- [@ngrx/store in 10 minutes (video)](https://egghead.io/lessons/angular-2-ngrx-store-in-10-minutes)\r\n- [Build Redux Style Applications with Angular2, RxJS, and ngrx/store (video)](https://egghead.io/courses/building-a-time-machine-with-angular-2-and-rxjs)\r\n\r\n\r\n### Setup\r\nCreate a reducer function for each data type you have in your application. The combination of these reducers will\r\nmake up your application state:\r\n\r\n```ts\r\n// counter.ts\r\nimport { ActionReducer, Action } from '@ngrx/store';\r\n\r\nexport const INCREMENT = 'INCREMENT';\r\nexport const DECREMENT = 'DECREMENT';\r\nexport const RESET = 'RESET';\r\n\r\nexport const counterReducer: ActionReducer<number> = (state: number = 0, action: Action) => {\r\n\tswitch (action.type) {\r\n\t\tcase INCREMENT:\r\n\t\t\treturn state + 1;\r\n\r\n\t\tcase DECREMENT:\r\n\t\t\treturn state - 1;\r\n\r\n\t\tcase RESET:\r\n\t\t\treturn 0;\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n}\r\n```\r\n\r\nIn your app's main module, import those reducers and use the `StoreModule.provideStore(reducers)`\r\nfunction to provide them to Angular's injector:\r\n\r\n```ts\r\nimport { NgModule } from '@angular/core'\r\nimport { StoreModule } from '@ngrx/store';\r\nimport { counterReducer } from './counter';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    StoreModule.provideStore({ counter: counterReducer })\r\n  ]\r\n})\r\nexport class AppModule {}\r\n```\r\n\r\n\r\nYou can then inject the `Store` service into your components and services. Use `store.select` to\r\n_select_ slice(s) of state:\r\n\r\n```ts\r\nimport { Store } from '@ngrx/store';\r\nimport { INCREMENT, DECREMENT, RESET } from './counter';\r\n\r\ninterface AppState {\r\n  counter: number;\r\n}\r\n\r\n@Component({\r\n\tselector: 'my-app',\r\n\ttemplate: `\r\n\t\t<button (click)=\"increment()\">Increment</button>\r\n\t\t<div>Current Count: {{ counter | async }}</div>\r\n\t\t<button (click)=\"decrement()\">Decrement</button>\r\n\r\n\t\t<button (click)=\"reset()\">Reset Counter</button>\r\n\t`\r\n})\r\nclass MyAppComponent {\r\n\tcounter: Observable<number>;\r\n\r\n\tconstructor(private store: Store<AppState>){\r\n\t\tthis.counter = store.select('counter');\r\n\t}\r\n\r\n\tincrement(){\r\n\t\tthis.store.dispatch({ type: INCREMENT });\r\n\t}\r\n\r\n\tdecrement(){\r\n\t\tthis.store.dispatch({ type: DECREMENT });\r\n\t}\r\n\r\n\treset(){\r\n\t\tthis.store.dispatch({ type: RESET });\r\n\t}\r\n}\r\n```\r\n\r\n\r\n## Contributing\r\nPlease read [contributing guidelines here](https://github.com/ngrx/store/blob/master/CONTRIBUTING.md).\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/ngrx/store.git"
  },
  "scripts": {
    "build": "npm run build:js && npm run build:umd && npm run build:uglify",
    "build:js": "ngc -p tsconfig.dist.json",
    "build:uglify": "uglifyjs -c --screw-ie8 --comments -o ./release/bundles/store.min.umd.js ./release/bundles/store.umd.js",
    "build:umd": "rollup -c rollup.config.js",
    "clean:post": "rimraf \"src/**/*.ngfactory.ts\"",
    "clean:pre": "rimraf release",
    "copy": "cpy LICENSE package.json README.md release",
    "karma": "karma start --single-run",
    "postbuild": "npm run clean:post && npm run copy",
    "prebuild": "npm run test && npm run clean:pre",
    "test": "npm run test:unit && npm run test:ngc",
    "test:ngc": "ngc -p ./spec/ngc/tsconfig.ngc.json",
    "test:unit": "npm run karma"
  },
  "version": "2.2.1"
}
